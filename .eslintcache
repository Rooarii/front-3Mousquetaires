[{"/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/index.js":"1","/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/reportWebVitals.js":"2","/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/App.js":"3","/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/Chatbot.js":"4","/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/CategorieList.jsx":"5","/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/Navbar.jsx":"6","/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/FicheProjet.jsx":"7","/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/CategoryMainPage.jsx":"8","/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/Join.jsx":"9","/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/Chat.jsx":"10"},{"size":547,"mtime":1610582508459,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610566745817,"results":"13","hashOfConfig":"12"},{"size":1236,"mtime":1610633168746,"results":"14","hashOfConfig":"12"},{"size":7185,"mtime":1610633168746,"results":"15","hashOfConfig":"12"},{"size":683,"mtime":1610633168746,"results":"16","hashOfConfig":"12"},{"size":593,"mtime":1610611121143,"results":"17","hashOfConfig":"12"},{"size":847,"mtime":1610573806666,"results":"18","hashOfConfig":"12"},{"size":1651,"mtime":1610633168746,"results":"19","hashOfConfig":"12"},{"size":846,"mtime":1610633168746,"results":"20","hashOfConfig":"12"},{"size":1814,"mtime":1610644208450,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"rwzl70",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/index.js",[],["47","48"],"/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/reportWebVitals.js",[],"/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/App.js",[],"/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/Chatbot.js",["49","50","51","52"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#6E48AA',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#6E48AA',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n  paddingLeft: '35%',\n};\n\n\n\nclass Review extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      interest: '',\n      age: '',\n    };\n  }\n\n  componentWillMount() {\n    const { steps } = this.props;\n    const { name, interest, interestChoice} = steps;\n\n    this.setState({ name, interest, interestChoice });\n  }\n\n  render() {\n    const { name, interest, interestChoice } = this.state;\n    return (\n      <div style={{ width: '100%' }}>\n        <h3>Résumé</h3>\n        <table>\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{name.value}</td>\n            </tr>\n            <tr>\n              <td>Centres d'intérêts</td>\n              <td>{interestChoice.value}</td>\n            </tr>\n            <tr>\n              <td>Tu veux</td>\n              <td>{interest.value}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nReview.propTypes = {\n  steps: PropTypes.object,\n};\n\nReview.defaultProps = {\n  steps: undefined,\n};\n\n// end summary\nclass End extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      interest: '',\n      age: '',\n    };\n  }\n\n  componentWillMount() {\n    const { steps } = this.props;\n    const { name, interest, age, interestChoice} = steps;\n\n    this.setState({ name, interest, age, interestChoice });\n  }\n\n  render() {\n    const { name, interestChoice } = this.state;\n    return (\n      <div style={{ width: '100%' }}>\n        <p>{`Bien joué ${name.value}!`}</p>\n        <p>{`Clique sur le centre d'intérêt ${interestChoice.value}`}</p>\n        <p>A bientôt ma gueule !</p>\n      </div>\n    );\n  }\n}\n\nEnd.propTypes = {\n  steps: PropTypes.object,\n};\n\nEnd.defaultProps = {\n  steps: undefined,\n};\n\nclass SimpleForm extends Component {\n  render() {\n    \n    return (\n      <ThemeProvider theme={theme}>\n        <ChatBot\n          speechSynthesis={{ enable: true, lang: 'fr' }}\n          recognitionEnable={true}\n          steps={[\n            {\n              id: '1',\n              message: \"Bonjour, bienvenue chez Artilect Moi c’est Richard, et toi ?\",\n              trigger: 'name',\n            },\n            {\n              id: 'name',\n              user: true,\n              trigger: '3',\n            },\n            {\n              id: '3',\n              message: `Super {previousValue}! commençons!\n              Tu es plutôt intéréssé par:`,\n              trigger: 'interest',\n            },\n            {\n              id: 'interest',\n              options: [\n                { value: 'Apprendre de nouvelles choses', label: 'Apprendre de nouvelles choses', trigger: '5' },\n                { value: 'Rejoindre un projet', label: 'Rejoindre un projet', trigger: '5' },\n                { value: 'Réserver une machine', label: 'Réserver une machine', trigger: '5' },\n              ],\n            },\n            {\n              id: '5',\n              message: `Dis moi tout! Quels sont tes centres d'intérêts?`,\n              trigger: 'interestChoice',\n            },\n            {\n              id: 'interestChoice',\n              options: [\n                { value: 'Biologie', label: 'Biologie', trigger: '7' },\n                { value: 'Electronique', label: 'Electronique', trigger: '7' },\n                { value: 'Couture', label: 'Couture', trigger: '7' },\n                { value: 'Drone', label: 'Drone', trigger: '7' },\n                { value: 'Machines', label: 'Machines', trigger: '7' },\n                { value: 'Design', label: 'Design', trigger: '7' },\n                { value: 'Musique', label: 'Musique', trigger: '7' },\n                { value: 'Robotique', label: 'Robotique', trigger: '7' },\n                { value: 'Architecture', label: 'Design', trigger: '7' },\n                { value: 'Média', label: 'Média', trigger: '7' },\n              ],\n              trigger:'7',\n             \n            },\n            // {\n            //   id: 'age',\n            //   user: true,\n            //   trigger: '7',\n            //   validator: (value) => {\n            //     if (isNaN(value)) {\n            //       return 'value must be a number';\n            //     } else if (value < 0) {\n            //       return 'value must be positive';\n            //     } else if (value > 120) {\n            //       return `${value}? Come on!`;\n            //     }\n\n            //     return true;\n            //   },\n            // },\n            {\n              id: '7',\n              message: 'Super! Voici tes réponses',\n              trigger: 'review',\n            },\n            {\n              id: 'review',\n              component: <Review />,\n              asMessage: true,\n              trigger: 'update',\n            },\n            {\n              id: 'update',\n              message: 'Tout est ok?',\n              trigger: 'update-question',\n            },\n            {\n              id: 'update-question',\n              options: [\n                { value: 'Oui', label: 'Oui', trigger: 'validate' },\n                { value: 'Non', label: 'Non', trigger: 'update-yes' },\n              ],\n            },\n\n            {\n              id: 'end',\n              message: 'Ready?',\n              trigger: 'ready',\n            },\n            {\n              id: 'ready',\n              options: [\n                { value: 'Oui', label: 'Oui', trigger: 'end-message' },\n                { value: 'Non', label: 'Non', trigger: 'update-yes' },\n              ],\n            },\n\n            {\n              id: 'update-yes',\n              message: 'Que veux tu modifier?',\n              trigger: 'update-fields',\n            },\n            {\n              id: 'update-fields',\n              options: [\n                { value: 'name', label: 'Prénom', trigger: 'update-name' },\n                { value: 'Tu veux', label: 'Tu veux', trigger: 'update-interest' },\n                { value: 'age', label: 'Age', trigger: 'update-age' },\n              ],\n            },\n            {\n              id: 'update-name',\n              update: 'name',\n              trigger: '7',\n            },\n            {\n              id: 'update-interest',\n              update: 'interest',\n              trigger: '7',\n            },\n            {\n              id: 'update-age',\n              update: 'age',\n              trigger: '7',\n            },\n            {\n              id: 'validate',\n              component: <End />,\n              asMessage: true,\n              triger: 'update',\n            },\n            {\n              id: 'end-message',\n              message: 'Thanks! Your data was submitted successfully!',\n             \n            },\n          ]}\n       \n        />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default SimpleForm;\n","/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/CategorieList.jsx",[],"/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/Navbar.jsx",[],"/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/FicheProjet.jsx",[],"/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/CategoryMainPage.jsx",["53","54","55"],"import formations from '../json/formations.json';\nimport projects from '../json/projects.json';\nimport React from 'react';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nconst CategoryMainPage = () => {\n  return (\n    <>\n      <h1>Projects :</h1>\n      <div className=\"card-wrap\">\n      {projects.projectElectronique.map(e => {\n  return (\n      <Card className=\"card-body\">\n        <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n        <CardBody>\n          <CardTitle tag=\"h5\">{e.name}</CardTitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Card subtitle</CardSubtitle>\n          <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n          <Link to='/project'><Button>Button</Button></Link>\n        </CardBody>\n      </Card> \n  )\n})}\n      </div>\n      \n      <h1>Formations :</h1>\n      <div className=\"card-wrap\">\n      {formations.electronique.map(e => {\n  return (\n      <Card className=\"card-body\">\n        <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n        <CardBody>\n          <CardTitle tag=\"h5\">{e.name}</CardTitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Card subtitle</CardSubtitle>\n          <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n          <Link to='/formation'><Button>Button</Button></Link>\n        </CardBody>\n      </Card> \n  )\n})}\n      </div>\n    </>\n  )\n}\n\nexport default CategoryMainPage;\n","/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/Join.jsx",[],["56","57"],"/home/rooarii/Desktop/3Mousquetaires/front-3mousquetaires/src/components/Chat.jsx",["58","59"],"import React, { useState, useEffect, Fragment } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client'\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState('');\n  const [room,  setRoom] = useState('');\n  const [message,  setMessage] = useState('');\n  const [messages,  setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000'\n\n  \n\n  useEffect(()=>{\n    const { name, room} = queryString.parse(location.search)\n    // console.log(location);\n    console.log(name, room)\n    var connectionOptions = {\"transports\" : [\"websockets\"]};\n    socket = io(ENDPOINT, connectionOptions);\n\n    setName(name);\n    setRoom(room);\n    // console.log(socket)\n\n    // join method\n    socket.emit('join', {name, room});\n\n    return () =>{\n      // call disconnect event\n      socket.emit('disconnect');\n\n      // close user connection\n      socket.off();\n    }\n\n  },[ENDPOINT, location.search]);\n\n  // second useEffect that listen to messages\n  useEffect(()=>{\n    socket.on('message', (message) =>{\n      setMessages([...messages, message]);\n    })\n  }, [messages]);\n\n  //function for sending messages\n\n  const sendMessage = (event)=>{\n    event.preventDefault();\n    if (message){\n      socket.emit('sendMessage', message, ()=> setMessage(''));\n    }\n  }\n\n  console.log(message, messages);\n\n  return (\n    <Fragment>\n      <div className=\"outerContainer\">\n        <div className=\"container\">\n          <input \n            value={message}\n            onChange={(event)=> setMessage(event.target.value)}\n            onKeyPress={event => event.key ==='Enter' ? sendMessage(event): null}\n          />\n        </div>\n      </div>\n       {/* <h1>Chat</h1>\n      <p>{`Hello ${name}, welcome to the ${room} room`}</p> */}\n    </Fragment>\n   \n  )\n};\n\nexport default Chat;",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":5,"column":27,"nodeType":"66","messageId":"67","endLine":5,"endColumn":33},{"ruleId":"64","severity":1,"message":"68","line":5,"column":35,"nodeType":"66","messageId":"67","endLine":5,"endColumn":41},{"ruleId":"64","severity":1,"message":"69","line":5,"column":43,"nodeType":"66","messageId":"67","endLine":5,"endColumn":47},{"ruleId":"64","severity":1,"message":"70","line":5,"column":49,"nodeType":"66","messageId":"67","endLine":5,"endColumn":54},{"ruleId":"71","severity":1,"message":"72","line":12,"column":9,"nodeType":"73","endLine":12,"endColumn":53},{"ruleId":"74","severity":1,"message":"75","line":22,"column":19,"nodeType":"73","endLine":22,"endColumn":76},{"ruleId":"74","severity":1,"message":"75","line":38,"column":19,"nodeType":"73","endLine":38,"endColumn":76},{"ruleId":"60","replacedBy":"76"},{"ruleId":"62","replacedBy":"77"},{"ruleId":"64","severity":1,"message":"78","line":8,"column":10,"nodeType":"66","messageId":"67","endLine":8,"endColumn":14},{"ruleId":"64","severity":1,"message":"79","line":9,"column":10,"nodeType":"66","messageId":"67","endLine":9,"endColumn":14},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["80"],["81"],"'name' is assigned a value but never used.","'room' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]